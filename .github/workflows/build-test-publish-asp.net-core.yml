name: Build, Test, and Publish ASP.NET Core Application

# Trigger when a tag following the "v*.*.*" format is created (semantic versioning)
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env: 
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_VERSION: '8.0.x'

jobs:
  # Linux based builds
  linux-build:
    runs-on: ubuntu-latest
    # Scopes not defined are set to None as long as one scope is manually set here
    permissions:
        contents: read # Allow checkout action to get the repo code
    strategy:
      matrix:
        platform: [linux-arm, linux-arm64]  # Building for ARM32 and ARM64

    steps:
        # Copy the repo code from the tag that triggered this action.
      - name: Checkout tag
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore --runtime ${{ matrix.platform }}

      - name: Run code tests
        run: dotnet test --configuration Release --no-build --verbosity normal --runtime ${{ matrix.platform }}

      - name: Publish project as ${{ matrix.platform }}
        shell: bash
        run: |
          # Get the tag name v*.*.* and remove the "v"
          VERSION_NUMBER=$(echo $GITHUB_REF_NAME | sed 's/^v//')
          dotnet publish --configuration Release --runtime ${{ matrix.platform }} --self-contained false --no-restore --output ./build/${{ matrix.platform }} /p:Version=$VERSION_NUMBER /p:AssemblyVersion=$VERSION_NUMBER

      - name: Upload ${{ matrix.platform }}-build as a artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: ./build/${{ matrix.platform }}
          # Only keep the artifact up on github for 1 day
          retention-days: 1

  # Windows based builds
  windows-build:
    runs-on: windows-latest 
    needs: linux-build
    if: success() # Ensure that there was no error during any of the needed jobs
    # Scopes not defined are set to None as long as one scope is manually set here
    permissions:
        contents: read # Allow checkout action to get the repo code
    strategy:
      matrix:
        platform: [win-x64]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore --runtime ${{ matrix.platform }}

      - name: Run code tests
        run: dotnet test --configuration Release --no-build --verbosity normal --runtime ${{ matrix.platform }}

      - name: Publish project as ${{ matrix.platform }}
        shell: pwsh
        run: |
          # Get the tag name v*.*.* and remove the "v"
          $VERSION_NUMBER = $env:GITHUB_REF_NAME -replace '^v', ''
          dotnet publish --configuration Release --runtime ${{ matrix.platform }} --self-contained false --no-restore --output ./build/${{ matrix.platform }} /p:Version=$VERSION_NUMBER /p:AssemblyVersion=$VERSION_NUMBER

      - name: Upload ${{ matrix.platform }}-build as a artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: ./build/${{ matrix.platform }}
          # Only keep the artifact up on github for 1 day
          retention-days: 1

  # Build Docker images and Push to GitHub Packages
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [linux-build,windows-build]
    if: success()
    strategy:
      matrix:
        platform: [linux-arm, linux-arm64, win-x64]
    permissions:
      contents: read  # Allow checkout action to get the repo code
      packages: write  # Allow pushing to GitHub Packages
    env:
      DOCKER_BUILD_RECORD_RETENTION_DAYS: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Download the build binary artifact
      - name: Download ${{ matrix.platform }}-build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: ./build/${{ matrix.platform }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Defines global environment variable for docker build
        run: |
          # Get the tag name v*.*.* and remove the "v"
          CURRENT_DOCKER_RELEASE_VERSION_NUMBER=$(echo $GITHUB_REF_NAME | sed 's/^v//')
          CURRENT_DOCKER_RELEASE_VERSION_NUMBER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "CURRENT_DOCKER_RELEASE_VERSION_NUMBER=${CURRENT_DOCKER_RELEASE_VERSION_NUMBER}" >> $GITHUB_ENV  # Set the variable as a environment variable

          # Replace the first "-" with "/" in the platform name to convert it to Docker platform format
          CURRENT_DOCKER_PLATFORM=$(echo "${{ matrix.platform }}" | sed 's/-/\//')
          echo "CURRENT_DOCKER_PLATFORM=${CURRENT_DOCKER_PLATFORM}" >> $GITHUB_ENV  # Set the variable as an environment variable

          # Remove all non-alphanumeric characters (keep only a-z, A-Z, 0-9)
          CURRENT_DOCKER_PLATFORM_CLEAN=$(echo "${CURRENT_DOCKER_PLATFORM}" | sed 's/[^a-zA-Z0-9]//g')
          CURRENT_DOCKER_PLATFORM_CLEAN=$(echo "${CURRENT_DOCKER_PLATFORM_CLEAN}" | tr '[:upper:]' '[:lower:]')
          echo "CURRENT_DOCKER_PLATFORM_CLEAN=${CURRENT_DOCKER_PLATFORM_CLEAN}" >> $GITHUB_ENV

          # Convert repository path to lowercase
          GITHUB_REPOSITORY_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "GITHUB_REPOSITORY_LOWERCASE=${GITHUB_REPOSITORY_LOWERCASE}" >> $GITHUB_ENV

      - name: Build and push Docker image for ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true  # Push the image to the registry
          tags: ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}:${{ env.CURRENT_DOCKER_RELEASE_VERSION_NUMBER }}-${{ env.CURRENT_DOCKER_PLATFORM_CLEAN }} # ghcr.io/repo-owner/repo-name:v?.?.?-PLATFORM
          platforms: ${{ env.CURRENT_DOCKER_PLATFORM }}  # Platform for multi-architecture build
          build-args: |
            BUILD_PATH="./build/${{ matrix.platform }}"